buildscript {
    ext {
        // external dependency versions
        dokkaPluginVersion = '0.9.8'
        groovyVersion = '2.4.5'
        gradleVersion = '2.14.1'
        kotlinVersion = '1.0.2'
        licensePluginVersion = '0.13.1'
        releasePluginVersion = '2.4.0'
        spockVersion = '1.0-groovy-2.4'

        // external dependencies
        groovy = "org.codehaus.groovy:groovy-all:${groovyVersion}"
        kotlinStdLib = "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
        spockCore = "org.spockframework:spock-core:${spockVersion}"
    }

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokkaPluginVersion}"
        classpath "gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:${licensePluginVersion}"
        classpath "net.researchgate:gradle-release:${releasePluginVersion}"
    }
}


task wrapper(type: Wrapper) {
    gradleVersion = this.gradleVersion
}

group = 'com.github.jonpeterson'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'groovy'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'com.github.hierynomus.license'
apply plugin: 'net.researchgate.release'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
    mavenCentral()
}

dependencies {
    compile kotlinStdLib

    testCompile groovy
    testCompile spockCore
}

license {
    include '**/*.kt'
    include '**/*.groovy'
    mapping {
        kt = 'SLASHSTAR_STYLE'
        groovy = 'SLASHSTAR_STYLE'
    }
}

dokka {
    outputDirectory = "$buildDir/dokka"
    linkMapping {
        dir = 'src/main/kotlin'
        url = 'https://github.com/jonpeterson/kotlin-range-sets/blob/master/src/main/kotlin'
        suffix = '#L'
    }
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
}

task javadocJar(type: Jar) {
    dependsOn dokkaJavadoc
    classifier = 'javadoc'
    from "$buildDir/javadoc"
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

build {
    dependsOn dokka
    dependsOn javadocJar
    dependsOn sourcesJar
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { deployment -> signing.signPom(deployment) }

            repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Kotlin Range Sets'
                packaging 'jar'
                description 'Implementation of set logic on the underlying values of Kotlin\'s Range classes.'
                url 'https://github.com/jonpeterson/kotlin-range-sets'

                scm {
                    connection 'scm:git:git://github.com/jonpeterson/kotlin-range-sets.git'
                    developerConnection 'scm:git:git@github.com:jonpeterson/kotlin-range-sets.git'
                    url 'https://github.com/jonpeterson/kotlin-range-sets'
                }

                licenses {
                    license {
                        name 'MIT License'
                        url 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }

                developers {
                    developer {
                        id 'jonpeterson'
                        name 'Jonathan Peterson'
                        email 'jonathan.p.peterson@gmail.com'
                        url 'https://github.com/jonpeterson'
                    }
                }
            }
        }
    }
}